<html>
   <head>
      <title>React Sample App</title>
      <style>
         /* http://meyerweb.com/eric/tools/css/reset/ 
         v2.0 | 20110126
         License: none (public domain)
         */
         html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
         padding: 0;
         border: 0;
         font-size: 100%;
         font: inherit;
         vertical-align: baseline;
         }
         article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block }
         body { line-height: 1 }
         ol, ul { list-style: none }
         blockquote, q { quotes: none }
         blockquote:before, blockquote:after, q:before, q:after {
         content: '';
         content: none;
         }
         table {
         border-collapse: collapse;
         border-spacing: 0;
         }
         /* * Copyright (c) 2012 Thibaut Courouble
         * http://www.webinterfacelab.com
         *
         * Licensed under the MIT License:
         * http://www.opensource.org/licenses/mit-license.php
         ================================================== */
         /* ========================================================
         Page
         =====================================================
         ================================================== */
         body {
         background: #f8f6f6;
         color: #404040;
         font-size: 12px;
         font-weight: normal;
         line-height: 20px;
         background: linear-gradient(90deg, #2BC0E4 10%, #EAECC6 90%);
         font-family: cursive;
         }
         a {
         color: #1e7ad3;
         text-decoration: none;
         }
         a:hover { text-decoration: underline }
         /* ========================================================
         Icons
         =====================================================
         ================================================== */
         [class^="icon-"], [class*=" icon-"] {
         display: inline-block;
         width: 12px;
         height: 12px;
         vertical-align: -2px;
         margin-right: 2px;
         background-image: url("http://demo.webinterfacelab.com/14-to-do-list/img/sprite.png");
         background-repeat: no-repeat;
         text-indent: 100%;
         white-space: nowrap;
         overflow: hidden;
         }
         /* ========================================================
         Todo List
         =====================================================
         ================================================== */
         .todo {
         position: relative;
         
         padding: 12px 0;
         background: #fff;
         border: 1px solid;
         border-color: #dfdcdc #d9d6d6 #ccc;
         border-radius: 2px;
         -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
         -moz-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
         box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
         }
         .todo:before, .todo:after {
         content: '';
         position: absolute;
         z-index: -1;
         height: 4px;
         background: #fff;
         border: 1px solid #ccc;
         border-radius: 2px;
         }
         .todo:after {
         left: 0;
         right: 0;
         bottom: -3px;
         -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
         -moz-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
         box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
         }
         .todo:before {
         left: 2px;
         right: 2px;
         bottom: -5px;
         border-color: #c4c4c4;
         -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
         -moz-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
         box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
         }
         .lt-ie9 .todo:before, .lt-ie9 .todo:after {
         height: 1px;
         border-top: 0;
         }
         .todo-list { border-top: 1px solid #e6ebed }
         .todo-list:before {
         content: '';
         width: 3px;
         z-index: 2;
         border: 1px solid #f2e3df;
         border-width: 0 1px;
         position: absolute;
         top: 0px;
         bottom: 0px;
         left: 35px;
         }
         .todo-list li {
         position: relative;
         padding: 7px 15px 7px 50px;
         line-height: 21px;
         font-size: 12px;
         color: #8b8f97;
         border-bottom: 1px solid #e6ebed;
         }
         input[type=checkbox] {
         display: none;
         }
         input[type=checkbox]:checked + .toggle:after{
         opacity: 1;
         }
         .todo-list .toggle {
         display: block;
         height: 35px;
         width: 35px;
         position: absolute;
         top: 0px;
         bottom: 0px;
         left: 0px;
         text-indent: 100%;
         overflow: hidden;
         cursor: pointer;
         }
         .toggle:after {
         content: '';
         position: absolute;
         position: absolute;
         width: 7px;
         height: 3px;
         background: transparent;
         top: 14px;
         left: 13px;
         border: 2px solid #aaa;
         border-top: none;
         border-right: none;
         -webkit-transform: rotate(-45deg);
         -moz-transform: rotate(-45deg);
         -o-transform: rotate(-45deg);
         -ms-transform: rotate(-45deg);
         transform: rotate(-45deg);
         opacity: 0;
         }
         .todo-list .toggle:before {
         content: '';
         width: 15px;
         height: 15px;
         background: #faf9f9;
         border: 1px solid #6bb3ca;
         border-radius: 2px;
         position: absolute;
         top: 9px;
         left: 9px;
         -webkit-box-shadow: 0 1px 1px #dfecf4;
         -moz-box-shadow: 0 1px 1px #dfecf4;
         box-shadow: 0 1px 1px #dfecf4;
         }
         .todo-list .toggle:hover:before {
         -webkit-box-shadow: 0 0 3px #6bb3ca;
         -moz-box-shadow: 0 0 3px #6bb3ca;
         box-shadow: 0 0 3px #6bb3ca;
         }
         .todo-list .done .toggle:before, .todo-list .toggle:active:before {
         border-color: #c0c0c0 #ccc #d8d8d8;
         -webkit-box-shadow: inset 0 1px rgba(0, 0, 0, 0.05), inset 0 5px 5px rgba(0, 0, 0, 0.05);
         -moz-box-shadow: inset 0 1px rgba(0, 0, 0, 0.05), inset 0 5px 5px rgba(0, 0, 0, 0.05);
         box-shadow: inset 0 1px rgba(0, 0, 0, 0.05), inset 0 5px 5px rgba(0, 0, 0, 0.05);
         }
         .todo-controls {
         margin: 0 15px 12px 50px;
         height: 12px;
         }
         .todo-controls li { float: right }
         .todo-controls li + li { margin-left: 10px }
         .todo-controls .right { float: right }
         .todo-controls a {
         display: block;
         margin: 0;
         opacity: .6;
         }
         .todo-controls a:hover { opacity: 1 }
         .todo-pagination {
         margin: 12px 12px 0 50px;
         height: 22px;
         }
         .todo-pagination li { float: left }
         .todo-pagination .next { float: right }
         .todo-pagination .next i { margin: 0 0 0 2px }
         .todo-pagination a, .todo-pagination span {
         display: block;
         line-height: 22px;
         font-size: 11px;
         color: #676f7f;
         }
         .todo-pagination a {
         padding: 0 8px;
         text-shadow: 0 1px #fff;
         background: #f1f0f0;
         border-radius: 3px;
         }
         .todo-pagination a:hover {
         background: #e9e9e9;
         text-decoration: none;
         }
         .todo-pagination span {
         padding: 0 4px;
         opacity: .3;
         }
		  .red-anchor{
			  color:red;
			  text-decoration: underline;
			  
		  }
		  
		  .fload-right{
			  float:right;		  
		  }
		  
		  .about :hover {
         color: red;
         
         }
        
         .glyphicon-remove-circle{
         color:red;
			 float:right;
         }
         .glyphicon-remove-circle:hover{
         color:red;
         font-size: 2em;
			float:right;
         }
         .glyphicon-ok-circle{
         color:green;
         }
         .glyphicon-ok-circle:hover{
         color:green;
         font-size: 2em;
         }
		  .glyphicon-remove{
			  color:red;
		  }
		  .glyphicon-remove:hover{
			  color:red;
		  }
         .links { zoom: 1 }
         .links:before, .links:after {
         content: "";
         display: table;
         }
         .links:after { clear: both }
         .links a {
         padding: 6px 0;
         float: left;
         width: 50%;
         font-size: 14px;
         }
		  .complete-date{
			  color: green;
		  }
		  .deadline-date{
			  color:red;
		  }
		  hr.type_5 {
			  	border-top: 3px double #8c8b8b;


}
		  .loader,
.loader:before,
.loader:after {
  background: #ffffff;
  -webkit-animation: load1 1s infinite ease-in-out;
  animation: load1 1s infinite ease-in-out;
  width: 1em;
  height: 4em;
}
.loader {
  color: #ffffff;
  text-indent: -9999em;
  margin: 88px auto;
  position: relative;
  font-size: 11px;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-animation-delay: -0.16s;
  animation-delay: -0.16s;
}
.loader:before,
.loader:after {
  position: absolute;
  top: 0;
  content: '';
}
.loader:before {
  left: -1.5em;
  -webkit-animation-delay: -0.32s;
  animation-delay: -0.32s;
}
.loader:after {
  left: 1.5em;
}
@-webkit-keyframes load1 {
  0%,
  80%,
  100% {
    box-shadow: 0 0;
    height: 4em;
  }
  40% {
    box-shadow: 0 -2em;
    height: 5em;
  }
}
@keyframes load1 {
  0%,
  80%,
  100% {
    box-shadow: 0 0;
    height: 4em;
  }
  40% {
    box-shadow: 0 -2em;
    height: 5em;
  }
}
		  
		  
		  .loader2 {
  margin: 100px auto;
  font-size: 25px;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  position: relative;
  text-indent: -9999em;
  -webkit-animation: load5 1.1s infinite ease;
  animation: load5 1.1s infinite ease;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
}
@-webkit-keyframes load5 {
  0%,
  100% {
    box-shadow: 0em -2.6em 0em 0em #ffffff, 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.5), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7);
  }
  12.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.7), 1.8em -1.8em 0 0em #ffffff, 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5);
  }
  25% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.5), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7), 2.5em 0em 0 0em #ffffff, 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  37.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5), 2.5em 0em 0 0em rgba(255, 255, 255, 0.7), 1.75em 1.75em 0 0em #ffffff, 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  50% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.5), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.7), 0em 2.5em 0 0em #ffffff, -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  62.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.5), 0em 2.5em 0 0em rgba(255, 255, 255, 0.7), -1.8em 1.8em 0 0em #ffffff, -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  75% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.5), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.7), -2.6em 0em 0 0em #ffffff, -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  87.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.5), -2.6em 0em 0 0em rgba(255, 255, 255, 0.7), -1.8em -1.8em 0 0em #ffffff;
  }
}
@keyframes load5 {
  0%,
  100% {
    box-shadow: 0em -2.6em 0em 0em #ffffff, 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.5), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7);
  }
  12.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.7), 1.8em -1.8em 0 0em #ffffff, 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5);
  }
  25% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.5), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7), 2.5em 0em 0 0em #ffffff, 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  37.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5), 2.5em 0em 0 0em rgba(255, 255, 255, 0.7), 1.75em 1.75em 0 0em #ffffff, 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  50% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.5), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.7), 0em 2.5em 0 0em #ffffff, -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2), -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  62.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.5), 0em 2.5em 0 0em rgba(255, 255, 255, 0.7), -1.8em 1.8em 0 0em #ffffff, -2.6em 0em 0 0em rgba(255, 255, 255, 0.2), -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  75% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.5), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.7), -2.6em 0em 0 0em #ffffff, -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);
  }
  87.5% {
    box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2), 1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2), 2.5em 0em 0 0em rgba(255, 255, 255, 0.2), 1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2), 0em 2.5em 0 0em rgba(255, 255, 255, 0.2), -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.5), -2.6em 0em 0 0em rgba(255, 255, 255, 0.7), -1.8em -1.8em 0 0em #ffffff;
  }
}

		  
		  
		  
      </style>
      <script src="https://unpkg.com/react@15.3.2/dist/react.js"></script>
      <script src="https://unpkg.com/react-dom@15.3.2/dist/react-dom.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
	   <link rel="icon" href="https://upload.wikimedia.org/wikipedia/en/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png">
      <!--  <script type="text/babel" src="App.jsx"></script>-->
   </head>
   <body>
      
      <div class="container">
		  
		 <div class="row">
		  
		  <div class="col-md-12">
			 
		 <nav class="navbar navbar-default">
         <ul class="nav navbar-nav">
            <li><a ui-sref="form"> <span
               class="glyphicon glyphicon-home"></span> Home
               </a>
            </li>
            <li><a ui-sref="about">About Us</a></li>
         </ul>
         <ul class="nav navbar-nav navbar-right">
            <li><a href="https://www.facebook.com/sdas.rng"> <span
               class="fa fa-facebook"></span>
               </a>
            </li>
            <li><a href="https://www.twitter.com/Souvik_Mcet"> <span
               class="fa fa-twitter-square"></span>
               </a>
            </li>
            <li><a href="https://www.github.com/Souvik93"> <span
               class="fa fa-github-square"></span>
               </a>
            </li>
            <li><a href="https://www.linkedin.com/in/souvik-das-aaa34999/"> <span
               class="fa fa-linkedin-square "></span>
               </a>
            </li>
            <li><a href="mailto:souvik.das@live.in"> <span
               class="fa fa-envelope-square"></span>
               </a>
            </li>
         </ul>
         <!--<ul class="nav navbar-nav navbar-right">
            <li><a ui-sref="form" ng-show="lin"><span
            		class="glyphicon glyphicon-log-in"></span> Login</a></li>
            <li><a ui-sref="out" ng-show="lon"><span
            		class="glyphicon glyphicon-log-out"></span> LogOut</a></li>
            </ul>-->
      </nav>
         
 	 
			 </div>
		  </div>
		 
            <div class="row center">
               <div class="col-md-12">
                  <div ui-view></div>
               </div>
            </div>
        
         <div class="row">
            <div class="col-md-12 col-xs-12">
               <marquee behavior="alternate">
                  <h4>To-Do App By Souvik, Database-Moongo Db , Server- Express , UI- React.JS , Backend- JavaScript</h4>
               </marquee>
             
            </div>
			
			 
			   <div id="reactContainer"></div>
			 
         </div>
      </div>
   </body>
   <script type="text/babel">
      var ToDoForm = React.createClass({ 
	  
	   componentWillMount: function() {
      this.getTasks();
	  
   },

      
      getInitialState:function() {
         return {
           task: [],
        result:"Hi",
        taskDetails:[],
		CtaskDetails:[]
         };
       },
      
      addTasks: function(e){
      	var smpl=this.state.task;
		var loadScreen = document.getElementById('imgR');
		var element = document.getElementById('sec');
		var Belement = document.getElementById('asec')
		element.style.display="none";
		loadScreen.style.display="block";
		Belement.style.display="none";
      	smpl.push({text: this._inputElement.value,
           key: Date.now(),
		   deadline: this.deadline.value});
        fetch('tasks', {
         method: 'post',
         headers: {'Content-Type': 'application/json'},
         body: JSON.stringify({
           'text': this._inputElement.value,
           'key': Date.now(),
		   'deadline':this.deadline.value
         })
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
	    //element.style.display="block";
		loadScreen.style.display="none";
	    var element = document.getElementById('id');
  element.style.display = "block";
	   
       this.setState({
      result: "Data Inserted Succesfully"
       });
	   setTimeout(function() {
    element.style.display = "none";
  }, 5000);
  this.getTasks();
       })
      	
       this.setState({
         task: smpl
       });
      	this._inputElement.value = "";		
      },
      
      getTasks: function(e){
	  console.log("Get task method");
      
      fetch('getTasks', {
         method: 'get',
         headers: {'Content-Type': 'application/json'},
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
	   //console.log(data.length);
	   this.CgetTasks();
	   var element = document.getElementById('sec');
	   var Belement = document.getElementById('asec');
	   if(data.length==0){
	   element.style.display="none";
	   Belement.style.display="block"
	   }
	   else{
	   element.style.display="block";
	   Belement.style.display="none"
	   this.setState({
      taskDetails: data
       });
	   }
       
       //console.log(this.state.taskDetails)
       })
      
      },
	  
	   CgetTasks: function(e){
      
      fetch('getCompletedTasks', {
         method: 'get',
         headers: {'Content-Type': 'application/json'},
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
	   console.log('From get complete tasks method');
	   var element = document.getElementById('csec');
	   var Belement = document.getElementById('acsec');
	   if(data.length==0) {
	   element.style.display="none";
	   Belement.style.display="block"
	   }
	   else{
	   element.style.display="block";
	   Belement.style.display="none";
	   this.setState({
      CtaskDetails: data
       });
	   }
       
       //console.log("Hello"+this.state.CtaskDetails)
       })
      
      },
      render: function() {
	  //console.log("Hello"+this.state.CtaskDetails);
      
      //this.CgetTasks();
      return (
      	<div>
		{this.getTasks}
		
		
      	<div className="col-md-9 col-xs-12">
      	<form>
      	<div className="form-group">
      	<h4>What do you want to do today?</h4>
             <input type="text" ref={(a) => this._inputElement = a} className="form-control" placeholder="ex- buy new smartphone for friend">
                   </input>
      		  </div>
			  
		<div className="form-group">
      	<h4>Expected Task Completion Date</h4>
             <input type="date" ref={(b) => this.deadline = b} className="form-control" >
                   </input>
      		  </div>
      		  
      		  <button type="button" className= "btn btn-success" onClick={this.addTasks}>Add Now</button>
      	</form>
      	</div>
		<div className="col-md-3 col-xs-12">
	
		<div style={{display: 'none'}} id='id' className="alert alert-success"> <h6>{this.state.result}</h6></div>
	   </div>
      		<div className="col-md-6 col-xs-12">
      	   <ToDoList tasks={this.state.taskDetails} getTasks={this.getTasks}> </ToDoList>
      	   </div>
		   
		   <div className="col-md-6 col-xs-12">
      	   <ToDoCList Ctasks={this.state.CtaskDetails} getTasks={this.getTasks}> </ToDoCList>
      	   </div>
		  
      	
      	</div>
         );
       }
      });
      
      var ToDoList=React.createClass({       
       
	   deleteTasks: function(e){
       //console.log(e);
      fetch('tasks', {
         method: 'delete',
         headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({
           'key': e
         })
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
       //alert("task deleted");
       //console.log(this.state.taskDetails)
	    this.props.getTasks();
       })
      
      },
	  
	  deleteAllTasks: function(e){
       //console.log(e);
	   var loadScreen = document.getElementById('imgR');
		var element = document.getElementById('sec');
		var Belement = document.getElementById('asec')
		element.style.display="none";
		loadScreen.style.display="block";
		//Belement.style.display="none";
      fetch('deleteAllTasks', {
         method: 'delete',
         headers: {'Content-Type': 'application/json'}
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
	   Belement.style.display="block";
		loadScreen.style.display="none";
       //alert("task deleted");
       //console.log(this.state.taskDetails)
	    this.props.getTasks();
       })
      
      },
	  
	  completeTasks: function(okey,text,sdate,deadlineDate){
	  
	  var loadScreen = document.getElementById('loaderForCompleteTask');
		var element = document.getElementById('csec');
		var Belement = document.getElementById('acsec')
		element.style.display="none";
		loadScreen.style.display="block";
		Belement.style.display="none";
	  fetch('completedTasks', {
         method: 'post',
         headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({
	  		'key':Date.now(),
           'oldKey': okey,
		   'text':text,
		   'sdate': sdate,
		   'deadline':deadlineDate
         })
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
       //alert("task deleted");
       //console.log(this.state.taskDetails)
	   element.style.display="block";
		loadScreen.style.display="none";
	   this.props.getTasks();
       })
	  
	  },
      render: function(){
      			//console.log(this.props.tasks);
      		  var todoEntries = this.props.tasks;
      		function createTasks(item) {
           return <li key={item.key}>{item.text}</li>
         }
      	var listItems = todoEntries.map(createTasks);
      	return(
      		<div>
      	<h4>Check Your To-Do List</h4>
		<hr className="type_5"></hr>
      		<section className="todo" id='sec'>
			<ul className="todo-controls  ">
		<li>
	   <a className="red-anchor" href="#" onClick={this.deleteAllTasks}>Delete All</a>
	   </li>
	   </ul>
      		<ul className="todo-list">
      		{this.props.tasks.map((key) =>
      		<li className="done" key={key.key} >
      		<h6><strong>{key.text} </strong> </h6>
			<h6><strong className="deadline-date">Task Deadline <small className="deadline-date">: {key.deadline} </small> </strong><strong className="fload-right"> Task Creation Date<small>: {key.sdate} </small></strong></h6>
      		<a className="glyphicon glyphicon-ok-circle" title="Done" onClick={this.completeTasks.bind(this,key.key,key.text,key.sdate,key.deadline)}></a>
      		<a className="glyphicon glyphicon-remove-circle" onClick={this.deleteTasks.bind(this,key.key)} title="Delete it"></a> 
        </li> )}
        </ul>
      		</section>
			<div className="loader" id="imgR" style={{display:'none'}} >Loading.....</div>
			<div className="alert alert-warning alert-dismissable" id="asec" style={{display:'none'}}>
    <a href="#" className="close" data-dismiss="alert" aria-label="close">×</a>
    <strong>Warning!</strong> You have not added anything..
  </div>
      		</div>
      );
      }
      });
	  
	   var ToDoCList=React.createClass({
	   
	   
       deleteCompletedTasks: function(e){
       //console.log(e);
      fetch('completedTasks', {
         method: 'delete',
         headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({
           'key': e
         })
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
       //alert("task deleted");
       //console.log(this.state.taskDetails)
	   this.props.getTasks();
       })
      
      },
	  deleteAllCompletedTasks: function(e){
       //console.log(e);
	   var loadScreen = document.getElementById('loaderForCompleteTask');
		var element = document.getElementById('csec');
		var Belement = document.getElementById('acsec')
		element.style.display="none";
		loadScreen.style.display="block";
		
      fetch('deleteAllCompletedTasks', {
         method: 'delete',
         headers: {'Content-Type': 'application/json'}
       })
       .then(response => {
         if (response.ok) return response.json()
       })
       .then(data => {
	   Belement.style.display="block"
		loadScreen.style.display="none";
	   this.props.getTasks();
       })
      
      },
      render: function(){
      		  var todoEntries = this.props.Ctasks;
      		function createTasks(item) {
           return <li key={item.key}>{item.text}</li>
         }
      	var listItems = todoEntries.map(createTasks);
      	return(
      		<div>
      	<h4>Check Your Completed Tasks</h4>
		<hr className="type_5"></hr>
		<section className="todo" id="csec">
		<ul className="todo-controls  ">
		<li>
	   <a className="red-anchor" href="#" onClick={this.deleteAllCompletedTasks}>Delete All</a>
	   </li>
	   </ul>
      		<ul className="todo-list">
      		{this.props.Ctasks.map((key) =>
      		<li className="done" key={key.key} >
      		<h5><strong><del>{key.text}</del></strong></h5>
			<h6><strong className="complete-date">Completed Date:{key.completedDate}</strong><strong className="deadline-date fload-right">Deadline Date : {key.deadline} <a className="glyphicon glyphicon-remove" onClick={this.deleteCompletedTasks.bind(this,key.key)} title="Delete it"></a></strong>  </h6>
        </li> )}
        </ul>
      		</section>
			<div className="loader2" id="loaderForCompleteTask" style={{display:'none'}} >Loading.....</div>
			
			<div className="alert alert-info alert-dismissable" id="acsec" style={{display:'none'}}>
    <a href="#" className="close" data-dismiss="alert" aria-label="close">×</a>
    <strong>Warning!</strong> Nothing to show here..
  </div>	
      		</div>
      );
      }
      });
      ReactDOM.render(<ToDoForm />, document.getElementById('reactContainer'));  
      
   </script>
</html>